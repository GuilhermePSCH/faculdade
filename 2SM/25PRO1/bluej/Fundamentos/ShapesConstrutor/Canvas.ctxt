#BlueJ class context
comment0.target=Canvas
comment0.text=\r\n\ Canvas\ \u00E9\ uma\ classe\ para\ permitir\ um\ simples\ desenho\ gr\u00E1fico\ em\ uma\ tela.\r\n\ Esta\ \u00E9\ uma\ modifica\u00E7\u00E3o\ do\ Canvas\ de\ uso\ geral,\ especialmente\ feito\ para\ o\r\n\ exemplo\ "shapes"\ do\ BlueJ.\r\n\r\n\ @author\:\ Bruce\ Quig\r\n\ @author\:\ Michael\ K\u00F6lling\ (mik)\r\n\r\n\ @version\:\ 1.6\ (shapes)\r\n
comment1.params=
comment1.target=Canvas\ getCanvas()
comment1.text=\r\n\ M\u00E9todo\ Factory\ para\ obter\ a\ inst\u00E2ncia\ \u00FAnica\ deste\ objeto.\r\n
comment2.params=title\ width\ height\ bgColour
comment2.target=Canvas(java.lang.String,\ int,\ int,\ java.awt.Color)
comment2.text=\r\n\ Cria\ um\ Canvas.\r\n\ \r\n\ @param\ title\ \ \ o\ t\u00EDtulo\ que\ aparece\ no\ Frame\ (janela)\ do\ Canvas\r\n\ @param\ width\ \ \ a\ largura\ desejada\ do\ canvas\r\n\ @param\ height\ \ a\ altura\ desejada\ do\ canvas\r\n\ @param\ bgClour\ a\ cor\ de\ fundo\ desejada\ do\ canvas\r\n
comment3.params=visible
comment3.target=void\ setVisible(boolean)
comment3.text=\r\n\ Define\ a\ visibilidade\ do\ canvas\ e\ traz\ a\ janela\ para\ a\ frente\ da\ tela\ quando\r\n\ ela\ se\ tornar\ vis\u00EDvel.\ Esse\ m\u00E9todo\ tamb\u00E9m\ pode\ ser\ usado\ para\ trazer\ uma\ tela\r\n\ j\u00E1\ vis\u00EDvel\ para\ a\ frente\ de\ outras\ janelas.\r\n\r\n\ @param\ visible\ valor\ booleano\ representando\ a\ visibilidade\ desejada\ do\ canvas\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (verdadeiro\ ou\ falso)\r\n
comment4.params=referenceObject\ color\ shape
comment4.target=void\ draw(java.lang.Object,\ java.lang.String,\ java.awt.Shape)
comment4.text=\r\n\ Desenha\ um\ determinado\ shape\ no\ canvas.\r\n\ \r\n\ @param\ referenceObject\ um\ objeto\ para\ definir\ a\ identifidade\ do\ shape\r\n\ @param\ color\ \ \ \ \ \ \ \ \ \ \ a\ cor\ do\ shape\r\n\ @param\ shape\ \ \ \ \ \ \ \ \ \ \ o\ objeto\ shape\ a\ ser\ desenhado\ no\ canvas\r\n
comment5.params=referenceObject
comment5.target=void\ erase(java.lang.Object)
comment5.text=\r\n\ Apaga\ um\ dado\ shape\ da\ tela.\r\n\ \r\n\ @param\ referenceObject\ o\ objeto\ shape\ a\ ser\ apagado.\r\n
comment6.params=colorString
comment6.target=void\ setForegroundColor(java.lang.String)
comment6.text=\r\n\ Define\ a\ cor\ de\ frente\ do\ Canvas.\r\n\ \r\n\ @param\ newColour\ a\ nova\ cor\ de\ frente\ do\ Canvas\r\n
comment7.params=milliseconds
comment7.target=void\ wait(int)
comment7.text=\r\n\ Aguarde\ um\ determinado\ n\u00FAmero\ de\ milissegundos\ antes\ de\ terminar.\ Isso\r\n\ fornece\ uma\ maneira\ f\u00E1cil\ de\ especificar\ um\ pequeno\ atraso\ que\ pode\ ser\ usado\r\n\ ao\ produzir\ anima\u00E7\u00F5es.\r\n\r\n\ @param\ milissegundos\ o\ n\u00FAmero\ de\ milisecundos\r\n
comment8.params=
comment8.target=void\ redraw()
comment8.text=\r\n\ Redesenha\ todos\ os\ shapes\ que\ est\u00E3o\ atualmente\ no\ Canvas.\r\n
comment9.params=
comment9.target=void\ erase()
comment9.text=\r\n\ Apaga\ todo\ o\ canvas.\ (N\u00E3o\ redesenha)\r\n
numComments=10
